document.addEventListener("DOMContentLoaded", () => {
    loadProducts();
    setupCart();
    loadCart();
    setupMenuToggle();
    updateUserUI();

    const editProfileBtn = document.getElementById('editProfileBtn');
    const logoutBtn = document.getElementById('logoutBtn');
    const userDetailsBtn = document.getElementById('userDetails');
    const checkoutButton = document.getElementById('checkoutButton');

    if (editProfileBtn) {
        editProfileBtn.addEventListener('click', editProfile);
    }

    if (logoutBtn) {
        logoutBtn.addEventListener('click', logout);
    }

    if (userDetailsBtn) {
        userDetailsBtn.addEventListener('click', showUserProfile);
    }

    if (checkoutButton) {
        checkoutButton.addEventListener('click', checkout);
    }
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å API ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
async function showUserProfile() {
    const user = await getUserDetails();
    
    if (user) {
        const profileDiv = document.getElementById('userProfile');
        profileDiv.style.display = 'block';

        document.getElementById('profileName').textContent = `‡∏ä‡∏∑‡πà‡∏≠: ${user.firstname} ${user.lastname}`;
        document.getElementById('profileEmail').textContent = `‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πå: ${user.email}`;
        document.getElementById('profileAge').textContent = `‡∏≠‡∏≤‡∏¢‡∏∏: ${user.age}`;
        document.getElementById('profileGender').textContent = `‡πÄ‡∏û‡∏®: ${user.gender}`;
        document.getElementById('profileInterests').textContent = `‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à: ${user.interests}`;
        document.getElementById('profileDescription').textContent = `‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: ${user.description}`;
        document.getElementById('profilePay').textContent = `‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡∏ú‡πà‡∏≤‡∏ô: ${user.payment_method}`;
    } else {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå');
    }
}

async function getUserDetails() {
    const user = JSON.parse(localStorage.getItem('user')); 
    
    if (!user || !user.id) {
        alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô');
        return null; 
    }
    
    try {
        const response = await fetch(`http://localhost:8000/users/profile/${user.id}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            const data = await response.json();
            return data;
        } else {
            console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:', await response.text());
            alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ');
            return null;
        }
    } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ');
        return null;
    }
}

document.getElementById('userDetails').addEventListener('click', async () => {
    const userDetails = await getUserDetails();

    if (userDetails) {
        document.getElementById('userfirstname').textContent = userDetails.firstname || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
        document.getElementById('useremail').textContent = userDetails.email || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
        document.getElementById('userage').textContent = userDetails.age || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
        document.getElementById('usergender').textContent = userDetails.gender || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
        document.getElementById('profileMenu').style.display = 'block';
    }
});

function logout() {
    localStorage.removeItem('user');
    updateUserUI();
    alert('‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    const profileMenu = document.getElementById('profileMenu');
    if (profileMenu) {
        profileMenu.classList.remove('visible');
    }

    // ‚úÖ ‡πÉ‡∏ä‡πâ path ‡πÅ‡∏ö‡∏ö relative ‡πÑ‡∏õ‡∏¢‡∏±‡∏á homepage
    window.location.href = 'homepage.html';
}



// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
function updateUserUI() {
    const user = JSON.parse(localStorage.getItem('user'));
    const userInfoDiv = document.getElementById('userInfo');
    const loginBtn = document.getElementById('loginBtn');
    const signupBtn = document.getElementById('signupBtn');
    const adminButtonContainer = document.getElementById("adminButtonContainer");

    if (user && userInfoDiv) {
        const userfirstname = document.getElementById('userfirstname');
        if (userfirstname) {
            userfirstname.textContent = user.firstname || '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ';
        }

        if (loginBtn) loginBtn.style.display = 'none';
        if (signupBtn) signupBtn.style.display = 'none';

        if (user.role === 'admin' && adminButtonContainer) {
            adminButtonContainer.style.display = "block";
        } else if (adminButtonContainer) {
            adminButtonContainer.style.display = "none";
        }
    } else {
        if (loginBtn) loginBtn.style.display = 'inline-block';
        if (signupBtn) signupBtn.style.display = 'inline-block';
        if (adminButtonContainer) adminButtonContainer.style.display = "none";
    }
}

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏Æ‡∏°‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå
function setupMenuToggle() {
    const hamburgerBtn = document.getElementById('hamburgerBtn');
    const profileMenu = document.getElementById('profileMenu');
    
    if (hamburgerBtn && profileMenu) {
        hamburgerBtn.addEventListener('click', () => {
            profileMenu.classList.toggle('visible');
        });
        
        document.addEventListener('click', (e) => {
            if (!profileMenu.contains(e.target) && e.target !== hamburgerBtn) {
                profileMenu.classList.remove('visible');
            }
        });
    }
}

function editProfile() {
    window.location.href = 'login/editProfile.html';
}

function scrollToProducts() {
    const productSection = document.getElementById('productSection');
    if (productSection) {
        productSection.scrollIntoView({ behavior: 'smooth' });
    }
}

// üì¶ Load products
async function loadProducts() {
    try {
        const response = await fetch("http://localhost:8000/products");
        let products = [];

        if (response.ok) {
            products = await response.json();
        } else {
            throw new Error("Failed to load products from the server");
        }

        const productList = document.getElementById("productList");
        if (!productList) return;

        productList.innerHTML = "";

        products.forEach(product => {
            const productCard = document.createElement("div");
            productCard.classList.add("product-card");
            productCard.innerHTML = `
                <img src="${product.img_url}" alt="${product.name}" loading="lazy">
                <h3>${product.name}</h3>
                <p>${product.price} THB</p>
                <button onclick="addToCart(${product.id}, '${product.name}', ${product.price})">üõí ‡∏´‡∏¢‡∏¥‡∏ö‡πÉ‡∏™‡πà‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤</button>
            `;
            productList.appendChild(productCard);
        });
    } catch (error) {
        console.error("Error loading products:", error);
    }
}

function setupCart() {
    const cart = JSON.parse(localStorage.getItem("cart")) || [];
    updateCartUI(cart);
}

function loadCart() {
    const cart = JSON.parse(localStorage.getItem("cart")) || [];
    updateCartUI(cart);
}

function addToCart(id, name, price) {
    let cart = JSON.parse(localStorage.getItem("cart")) || [];
    const existingProduct = cart.find(item => item.id === id);

    if (existingProduct) {
        existingProduct.quantity += 1;
        showPopupMessage(`‚ú® ‡πÄ‡∏û‡∏¥‡πà‡∏° ${name} ‡∏≠‡∏µ‡∏Å 1 ‡∏ä‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß (${existingProduct.quantity} ‡∏ä‡∏¥‡πâ‡∏ô)`);
    } else {
        cart.push({ id, name, price, quantity: 1 });
        showPopupMessage(`üßö‚Äç‚ôÄÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏° ${name} ‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß!`);
    }

    localStorage.setItem("cart", JSON.stringify(cart));
    updateCartUI(cart);
}

function showPopupMessage(message) {
    let popupContainer = document.getElementById('popupContainer');

    if (!popupContainer) {
        popupContainer = document.createElement('div');
        popupContainer.id = 'popupContainer';
        popupContainer.style.position = 'fixed';
        popupContainer.style.bottom = '20px';
        popupContainer.style.right = '20px';
        popupContainer.style.zIndex = '1000';
        document.body.appendChild(popupContainer);
    }

    const popup = document.createElement('div');
    popup.className = 'popup-message';
    popup.innerText = message;
    popup.style.cssText = `
        background: linear-gradient(90deg, #F8C8DC, #AEE2FF);
        color: white;
        padding: 12px 20px;
        border-radius: 10px;
        margin: 10px 0;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        animation: fadeIn 0.5s, fadeOut 0.5s 2.5s;
        font-weight: bold;
    `;

    popupContainer.appendChild(popup);
    setTimeout(() => popup.remove(), 3000);
}

const style = document.createElement('style');
style.innerHTML = `
    @keyframes fadeIn {
        from { opacity: 0; transform: translateX(50px); }
        to { opacity: 1; transform: translateX(0); }
    }
    @keyframes fadeOut {
        from { opacity: 1; transform: translateX(0); }
        to { opacity: 0; transform: translateX(50px); }
    }
`;
document.head.appendChild(style);

function updateCartUI(cart) {
    const cartList = document.getElementById("cartList");
    const totalPriceElement = document.getElementById("totalPrice");

    if (!cartList || !totalPriceElement) return;

    cartList.innerHTML = "";
    let totalPrice = 0;

    if (cart.length === 0) {
        cartList.innerHTML = "<li class='empty-cart'>‚ú® ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‚ú®</li>";
    } else {
        cart.forEach(item => {
            const listItem = document.createElement("li");
            listItem.innerHTML = `
                <div>
                    <span>${item.name}</span>
                </div>
                <div class="cart-item-controls">
                    <button class="qty-btn" onclick="decreaseQuantity(${item.id})">-</button>
                    <span class="quantity">${item.quantity}</span>
                    <button class="qty-btn" onclick="increaseQuantity(${item.id})">+</button>
                    <span class="price">${item.price * item.quantity} THB</span>
                    <button class="remove-btn" onclick="removeFromCart(${item.id})">‡∏•‡∏ö</button>
                </div>
            `;
            cartList.appendChild(listItem);
            totalPrice += item.price * item.quantity;
        });
    }

    totalPriceElement.innerText = totalPrice;
    updateCartBadge(cart);
}

function updateCartBadge(cart) {
    const cartBadge = document.getElementById("cartBadge");
    if (cartBadge) {
        const totalItems = cart.reduce((total, item) => total + item.quantity, 0);

        if (totalItems > 0) {
            cartBadge.textContent = totalItems;
            cartBadge.style.display = 'flex';
        } else {
            cartBadge.style.display = 'none';
        }
    }
}

function increaseQuantity(id) {
    let cart = JSON.parse(localStorage.getItem("cart")) || [];
    const item = cart.find(item => item.id === id);

    if (item) {
        item.quantity += 1;
        localStorage.setItem("cart", JSON.stringify(cart));
        updateCartUI(cart);
    }
}

function decreaseQuantity(id) {
    let cart = JSON.parse(localStorage.getItem("cart")) || [];
    const item = cart.find(item => item.id === id);

    if (item && item.quantity > 1) {
        item.quantity -= 1;
        localStorage.setItem("cart", JSON.stringify(cart));
        updateCartUI(cart);
    } else if (item && item.quantity === 1) {
        if (confirm(`‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö ${item.name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`)) {
            removeFromCart(id);
        }
    }
}

function removeFromCart(id) {
    let cart = JSON.parse(localStorage.getItem("cart")) || [];
    const itemIndex = cart.findIndex(item => item.id === id);

    if (itemIndex !== -1) {
        const itemName = cart[itemIndex].name;
        cart.splice(itemIndex, 1);
        localStorage.setItem("cart", JSON.stringify(cart));
        updateCartUI(cart);
        showPopupMessage(`üóëÔ∏è ‡∏•‡∏ö ${itemName} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß`);
    }
}

function checkout() {
    const user = JSON.parse(localStorage.getItem('user'));
    const cart = JSON.parse(localStorage.getItem("cart")) || [];

    if (cart.length === 0) {
        alert('‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤');
        return;
    }

    if (!user) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô');
        return;
    }

    const totalAmount = cart.reduce((total, item) => total + item.price * item.quantity, 0);
    alert(`‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞: ${totalAmount} THB`);
}

document.getElementById("checkoutButton").addEventListener("click", () => {
    document.getElementById("checkoutModal").style.display = "flex";
});

document.getElementById("closeModal").addEventListener("click", () => {
    document.getElementById("checkoutModal").style.display = "none";
});

document.getElementById("confirmCheckout").addEventListener("click", async () => {
    const user = JSON.parse(localStorage.getItem("user"));
    const cart = JSON.parse(localStorage.getItem("cart")) || [];
    
    if (!user) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠");
        return;
    }
    if (cart.length === 0) {
        alert("‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤");
        return;
    }

    const shippingAddress = document.getElementById("shippingAddress").value;
    const paymentMethod = document.getElementById("paymentMethod").value;

    if (!shippingAddress) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà");
        return;
    }

    const orderData = {
        user_id: user.id,
        items: cart,
        total_price: cart.reduce((sum, item) => sum + item.price * item.quantity, 0),
        shipping_address: shippingAddress,
        payment_method: paymentMethod,
        status: "pending",
    };
    
    try {
        const response = await axios.post("http://localhost:8000/orders", orderData);

        if (response.status === 201) {
            alert(`üéâ ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå: ${response.data.orderId}`);
            localStorage.removeItem("cart");
            updateCartUI([]); // ‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÉ‡∏ô UI
            document.getElementById("checkoutModal").style.display = "none";
        } else {
            alert("‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠");
        }
    } catch (error) {
        alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå");
        console.error(error);
    }
});

